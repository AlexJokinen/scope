# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-06-01 10:31
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('identifier', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('creator', models.CharField(blank=True, max_length=200)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200)),
                ('contributor', models.CharField(blank=True, max_length=200)),
                ('date', models.CharField(blank=True, max_length=21)),
                ('dctype', models.CharField(blank=True, max_length=200)),
                ('dcformat', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('language', models.CharField(blank=True, max_length=20)),
                ('coverage', models.CharField(blank=True, max_length=200)),
                ('rights', models.CharField(blank=True, max_length=200)),
                ('link', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DigitalFile',
            fields=[
                ('uuid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('filepath', models.TextField()),
                ('fileformat', models.CharField(max_length=200)),
                ('formatversion', models.CharField(blank=True, max_length=200, null=True)),
                ('size_bytes', models.IntegerField()),
                ('size_human', models.CharField(blank=True, max_length=10)),
                ('datemodified', models.CharField(blank=True, max_length=30)),
                ('puid', models.CharField(blank=True, max_length=11)),
                ('amdsec', models.CharField(max_length=12)),
                ('hashtype', models.CharField(max_length=7)),
                ('hashvalue', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='DIP',
            fields=[
                ('identifier', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('creator', models.CharField(blank=True, max_length=200)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200)),
                ('contributor', models.CharField(blank=True, max_length=200)),
                ('date', models.CharField(blank=True, max_length=21)),
                ('dctype', models.CharField(blank=True, max_length=200)),
                ('dcformat', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('language', models.CharField(blank=True, max_length=20)),
                ('coverage', models.CharField(blank=True, max_length=200)),
                ('rights', models.CharField(blank=True, max_length=200)),
                ('objectszip', models.FileField(upload_to='')),
                ('uploaded', models.DateTimeField(auto_now_add=True)),
                ('ispartof', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dips', to='dips.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='PREMISEvent',
            fields=[
                ('uuid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('eventtype', models.CharField(blank=True, max_length=200)),
                ('datetime', models.CharField(blank=True, max_length=50)),
                ('detail', models.TextField(blank=True, null=True)),
                ('outcome', models.TextField(blank=True, null=True)),
                ('detailnote', models.TextField(blank=True, null=True)),
                ('digitalfile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='premis_events', to='dips.DigitalFile')),
            ],
        ),
        migrations.AddField(
            model_name='digitalfile',
            name='dip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_files', to='dips.DIP'),
        ),
    ]

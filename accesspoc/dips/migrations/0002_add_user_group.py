# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-06-01 10:32
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.management import create_permissions


def migrate_permissions(apps, schema_editor):
    """
    Create permissions in migration before they are created in a
    post_migrate signal handler. They are needed to create the user
    group and the signal handler won't create duplicated permissions.
    This must be executed after the auth and dips apps are migrated.
    """
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def add_user_group(apps, schema_editor):
    """
    Create 'Edit Collections and Folders' user group with
    permissions to add and edit collections and dips.
    """
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    editor_group, created = Group.objects.get_or_create(
        name='Edit Collections and Folders')
    if created:
        permissions = Permission.objects.filter(codename__in=(
            'add_collection', 'change_collection',
            'add_dip', 'change_dip',
        ))
        for permision in permissions:
            editor_group.permissions.add(permision)
        editor_group.save()


class Migration(migrations.Migration):

    dependencies = [
        ('dips', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_permissions),
        migrations.RunPython(add_user_group),
    ]
